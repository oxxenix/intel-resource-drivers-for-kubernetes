apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: intel-gaudi-resource-driver-kubelet-plugin
  namespace: intel-gaudi-resource-driver
spec:
  template:
    spec:
      initContainers:
      - name: device-faker
        # 'Always' policy makes it a sideCar container with longer lifecycle,
        # allowing it to be terminated last
        # https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#termination-with-sidecars
        # which allows proper fake root cleanup.
        restartPolicy: Always
        image: registry.local/intel-device-faker:latest
        imagePullPolicy: Always
        command: ["/device-faker", "gaudi", "-t", "/opt/templates/gaudi-template.json", "-r", "-d", "/tmp/fake-root", "-c"]
        volumeMounts:
        - name: fake-root
          mountPath: /tmp/fake-root
        securityContext:
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ "ALL" ]
            add:  [ "MKNOD" ]
      containers:
      - name: kubelet-plugin
        # `-v 5` is added for more verbose logging.
        command: ["/kubelet-gaudi-plugin", "-v", "5"]
        image: intel/intel-gaudi-resource-driver:latest
        imagePullPolicy: Always
        env:
        - name: SYSFS_ROOT
          value: "/sysfs"
        - name: DEVFS_ROOT
          value: "/tmp/fake-root/dev"
        volumeMounts:
        - name: fake-root
          mountPath: /sysfs
          subPath: sysfs
        - name: fake-root
          mountPath: /tmp/fake-root/dev
          subPath: dev
        - name: fake-root
          mountPath: /etc/cdi
          subPath: cdi
        securityContext:
          privileged: false
      volumes:
      - name: fake-root
        hostPath:
          path: /tmp/fake-root
